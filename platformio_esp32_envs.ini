;;; ESP32 test build ********************************************************************;
; Status of the ESP32 support is still considered "beta"                                 ;
; Most plugins work just fine on ESP32.                                                  ;
; Especially some plugins using serial may not run very well  (GPS does run fine).       ;
; ***************************************************************************************;



[esp32_common]
extends                   = common, core_esp32_3_1_0
lib_ignore                = ESP8266WiFi, ESP8266Ping, ESP8266WebServer, ESP8266HTTPUpdateServer, ESP8266mDNS, IRremoteESP8266, ESPEasy_ESP8266Ping, ESP32_ping, HeatpumpIR
lib_deps                  = https://github.com/TD-er/ESPEasySerial.git#v2.0.5, adafruit/Adafruit ILI9341 @ ^1.5.6,  Adafruit GFX Library, LOLIN_EPD, Adafruit BusIO
board_build.f_flash       = 80000000L
board_build.flash_mode    = dout
board_upload.maximum_size = 1900544
board_build.partitions    = esp32_partition_app1810k_spiffs316k.csv
extra_scripts             = post:tools/pio/post_esp32.py
                            ${extra_scripts_default.extra_scripts}
build_unflags             = -Wall
build_flags               = ${mqtt_flags.build_flags} 
                            -DCONFIG_FREERTOS_ASSERT_DISABLE
                            -DCONFIG_LWIP_ESP_GRATUITOUS_ARP
                            -DCONFIG_LWIP_GARP_TMR_INTERVAL=30
monitor_filters           = esp32_exception_decoder



; Custom: 4096k version --------------------------
[env:custom_ESP32_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}   -DPLUGIN_BUILD_CUSTOM
board                     = esp32dev
extra_scripts             = ${esp32_common.extra_scripts}
                            pre:tools/pio/pre_custom_esp32.py

[env:custom_IR_ESP32_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}   -DPLUGIN_BUILD_CUSTOM
board                     = esp32dev
lib_ignore                = ESP8266WiFi, ESP8266Ping, ESP8266WebServer, ESP8266HTTPUpdateServer, ESP8266mDNS, ESPEasy_ESP8266Ping, ESP32_ping, HeatpumpIR
extra_scripts             = ${esp32_common.extra_scripts}
                            pre:tools/pio/pre_custom_esp32.py

[env:normal_ESP32_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
lib_deps                  = ${esp32_common.lib_deps}, ServoESP32
build_flags               = ${esp32_common.build_flags}  
                            -DFEATURE_ARDUINO_OTA
board                     = esp32dev
extra_scripts             = ${esp32_common.extra_scripts}


[env:test_ESP32_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}  
                            -DFEATURE_ARDUINO_OTA
                            -DPLUGIN_SET_TEST_ESP32
board                     = esp32dev
extra_scripts             = ${esp32_common.extra_scripts}


[env:test_ESP32-wrover-kit_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}
                            -DFEATURE_ARDUINO_OTA
                            -DPLUGIN_SET_TEST_ESP32
board                     = esp-wrover-kit
upload_protocol           = ftdi
debug_tool                = ftdi
debug_extra_cmds          = break Misc.ino:3011
extra_scripts             = ${esp32_common.extra_scripts}

[env:test_ESP32_4M316k_lolin_d32_pro]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
build_flags               = ${esp32_common.build_flags}  
                            -DFEATURE_ARDUINO_OTA
                            -DPLUGIN_SET_TEST_ESP32
                            -DUSES_P096
board                     = lolin_d32_pro
extra_scripts             = ${esp32_common.extra_scripts}

[env:test_ESP32_IRExt_4M316k]
extends                   = env:test_ESP32_4M316k
lib_ignore                = AS_BH1750, ESP8266WiFi, ESP8266Ping, ESP8266WebServer, ESP8266HTTPUpdateServer, ESP8266mDNS, ESPEasy_ESP8266Ping, ESP32_ping
build_flags               = ${esp32_common.build_flags}
                            -DPLUGIN_BUILD_NORMAL_IRext

[env:energy_ESP32_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
lib_deps                  = ${esp32_common.lib_deps}, ServoESP32
build_flags               = ${esp32_common.build_flags}  
                            -DFEATURE_ARDUINO_OTA
                            -D PLUGIN_ENERGY_COLLECTION
board                     = esp32dev
extra_scripts             = ${esp32_common.extra_scripts}

[env:display_ESP32_4M316k]
extends                   = esp32_common
platform                  = ${esp32_common.platform}
lib_deps                  = ${esp32_common.lib_deps}, ServoESP32
build_flags               = ${esp32_common.build_flags}  
                            -DFEATURE_ARDUINO_OTA
                            -D PLUGIN_DISPLAY_COLLECTION
board                     = esp32dev
extra_scripts             = ${esp32_common.extra_scripts}


; Custom: 4096k version --------------------------
[env:custom_ESP32_4M316k_ETH]
extends                   = env:custom_ESP32_4M316k
platform                  = ${env:custom_ESP32_4M316k.platform}
build_flags               = ${env:custom_ESP32_4M316k.build_flags} -DHAS_ETHERNET

[env:normal_ESP32_4M316k_ETH]
extends                   = env:normal_ESP32_4M316k
platform                  = ${env:normal_ESP32_4M316k.platform}
build_flags               = ${env:normal_ESP32_4M316k.build_flags} -DHAS_ETHERNET

[env:test_ESP32_4M316k_ETH]
extends                   = env:test_ESP32_4M316k
platform                  = ${env:test_ESP32_4M316k.platform}
build_flags               = ${env:test_ESP32_4M316k.build_flags} -DHAS_ETHERNET


[env:test_ESP32-wrover-kit_4M316k_ETH]
extends                   = env:test_ESP32-wrover-kit_4M316k
platform                  = ${env:test_ESP32-wrover-kit_4M316k.platform}
build_flags               = ${env:test_ESP32-wrover-kit_4M316k.build_flags} -DHAS_ETHERNET
